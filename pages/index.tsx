import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { connect } from "react-redux";
import { useCallback, useEffect } from "react";
import styled from "styled-components";
import {
  changeCategoryAction,
  getProductsAction,
  addCartAction,
  getCartAction,
} from "../redux/productsDuck";
import styles from "../styles/Home.module.css";
import CategoryDeck from "../components/CategoryDeck/CategoryDeck";
import ProductsDeck from "../components/ProductsDeck/ProductsDeck";
import Sidebar from "../components/Sidebar/Sidebar";
import timeImg from "../assets/icons/149316.svg"
import headerimage from '../assets/images/headerimage.png';

interface Props {
  Categories: any;
  Products: any;
  changeCategoryAction: any;
  productos: any;
  getProductsAction: any;
  categoria: any;
  addCartAction: any;
  cart: any;
  getCartAction: any;
}

const HomeStyled = styled.div`
  display: flex;
  justify-content: space-between;
  min-height: 100vh;
`;

const TitleRestaurants = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 2rem;
  font-weight: 500;
`;

const Button = styled.button`
  background-color: #ff6223;
  color: white;
  font-size: .8rem;
  font-weight: 400;
  border-radius: 30px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 150px;
  height: 30px;
  padding:1.3rem 1rem;

`;

const StyledBanner = styled.div`
  background-color :#fff7eb;
  display: flex;
  align-items: self-end;
  height: 200px;

  `;

const Home: NextPage<Props> = ({
  Categories,
  Products,
  changeCategoryAction,
  getProductsAction,
  addCartAction,
  productos,
  categoria,
  cart,
}) => {
  useEffect(() => {
    getProductsAction(categoria, Products);
  }, [Products, categoria, getProductsAction]);

  const categoryHandler = useCallback(
    (id: Number) => {
      changeCategoryAction(id);
    },
    [changeCategoryAction]
  );

  const cardHandler = ({ id, nom, price, image }: any) => {
    addCartAction({ id, nom, price, image });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomeStyled>
        <div
          style={{ marginRight: "1rem", paddingBottom: "3rem", width: "65%", padding: "2rem 0" }}
        >
          <StyledBanner>
            <Image src={headerimage} alt="" layout="fixed" width={200} height={250}/ >
          </StyledBanner>
          <TitleRestaurants>
            <h1>Restaurants üçî</h1>
            <Button>
              <Image src={timeImg} alt="" width={18} height={18} />
              <p>Delivery: Now</p>
            </Button>
          </TitleRestaurants>
          <CategoryDeck
            Categories={Categories}
            categoria={categoria}
            categoryHandler={categoryHandler}
          />
          <ProductsDeck productos={productos} cardHandler={cardHandler} />
        </div>
        <Sidebar cart={cart} />
      </HomeStyled>
    </div>
  );
};

Home.getInitialProps = async ({ req }) => {
  const resCat = await fetch("http://localhost:3000/api/hello");
  const jsonCat = await resCat.json();

  const resProd = await fetch("http://localhost:3000/api/products");
  const jsonProd = await resProd.json();
  const categoria: any = 1;
  const productos: any = [];
  const cart: any = [];
  return {
    Categories: jsonCat,
    Products: jsonProd,
    changeCategoryAction,
    productos,
    getProductsAction,
    categoria,
    addCartAction,
    cart,
    getCartAction,
  };
};

export interface State {
  product: any;
}

const mapStateToProps = (state: State) => {
  return {
    categoria: state.product.currentCategory,
    productos: state.product.currentProducts,
    cart: state.product.cart,
  };
};

export default connect(mapStateToProps, {
  changeCategoryAction,
  addCartAction,
  getProductsAction,
  getCartAction,
})(Home);
